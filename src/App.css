/* src/App.css */
:root {
  --cell-size: 25px;
  --small-cell-size: 15px;
  /* Next/Hold 用のセルサイズ */
  --border-color: #333;
  --bg-color: #111;
  --text-color: #fff;
  --ghost-color: rgba(255, 255, 255, 0.2);
  --ghost-border-color: rgba(255, 255, 255, 0.4);
  --info-panel-width: 220px;
  /* 情報パネルエリアの幅を変数化 (例) */
}

body {
  margin: 0;
  font-family: 'Arial', sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  overflow-y: scroll;
}

.app {
  /* max-width: 1000px; */
  /* レイアウトに合わせて調整 */
  width: fit-content;
  /* 内容に合わせて幅を調整 */
  margin: 20px auto;
  padding: 10px;
  /* 少し狭く */
  text-align: center;
}

h1 {
  margin-bottom: 15px;
  /* 少し狭く */
  color: #61dafb;
}

/* --- 新しいゲームレイアウト (Grid) --- */
.game-layout {
  display: grid;
  /* カラム: Hold | GameBoard | Next | Info+Controls */
  grid-template-columns: auto min-content auto var(--info-panel-width);
  /* ★ 4カラム定義 */
  gap: 20px;
  /* パネル間のスペース */
  justify-content: center;
  align-items: flex-start;
  margin-top: 15px;
}

/* 左パネル (Hold) */
.left-panel {
  width: 100px;
  /* ホールド表示に必要な幅 (要調整) */
}

/* ゲームボードエリア */
.game-board-area {
  /* 特に指定不要 GameBoard 自体のスタイルが適用される */
}

/* Nextキューパネル */
.next-queue-panel {
  width: 100px;
  /* Nextキュー表示に必要な幅 (固定) */
  /* Nextキューパネル自体のスタイルは下で定義 */
}

/* 情報 & コントロールエリア */
.info-controls-area {
  display: flex;
  /* 中の要素 (InfoPanel, Controls) を縦に並べる */
  flex-direction: column;
  gap: 15px;
  /* InfoPanelとControlsの間隔 */
  width: 100%;
  /* grid-template-columns で指定された幅を使う */
}

/* ゲームボード */
.game-board {
  display: inline-block;
  /* Gridアイテムとして配置 */
  background-color: rgba(0, 0, 0, 0.8);
  border: 2px solid var(--border-color);
  padding: 2px;
  line-height: 0;
  /* セル間の隙間をなくす */
}

.row {
  display: flex;
  height: var(--cell-size);
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid rgba(50, 50, 50, 0.5);
  box-sizing: border-box;
  background-color: transparent;
}

.cell.filled {
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: inset 0 0 3px rgba(255, 255, 255, 0.2);
}

.cell.ghost {
  background-color: var(--ghost-color) !important;
  border: 1px dashed var(--ghost-border-color) !important;
  box-shadow: none !important;
}

/* ホールドパネル */
.hold-panel {
  background-color: rgba(0, 0, 0, 0.4);
  padding: 10px;
  border-radius: 5px;
  border: 1px solid var(--border-color);
  text-align: center;
}

.hold-panel h3 {
  margin: 0 0 8px 0;
  font-size: 14px;
  color: #61dafb;
  padding-bottom: 5px;
  border-bottom: 1px solid var(--border-color);
}

/* ホールドパネル内の BlockDisplay ラッパー共通スタイル */
.hold-panel .block-display-wrapper {
  display: inline-block;
  /* 中身のサイズに合わせる */
  padding: 5px;
  /* BlockDisplay の padding 相当 */
  border: 1px solid var(--border-color);
  background-color: rgba(0, 0, 0, 0.5);
  /* 通常時の背景色 */
  border-radius: 3px;
  transition: background-color 0.3s ease, border-color 0.3s ease;
  /* 色変化を滑らかに */
  line-height: 0;
  /* 隙間防止 */
  /* サイズは内部の BlockDisplay に合わせるか、必要なら指定 */
  min-height: calc(var(--small-cell-size) * 4 + 2px);
  /* border分考慮 */
  min-width: calc(var(--small-cell-size) * 4 + 2px);
  /* border分考慮 */
  box-sizing: border-box;
  /* padding と border を含める */
}

/* ★ ホールド不可状態のラッパーのスタイル ★ */
.hold-panel .block-display-wrapper.hold-unavailable {
  background-color: rgba(255, 165, 0, 0.2);
  /* 薄い橙色 (透過度はお好みで調整) */
  border-color: rgba(255, 165, 0, 0.5);
  /* 枠線の色も少し橙色に */
}

/* ホールドパネル内の BlockDisplay 自体のスタイル調整 */
.hold-panel .block-display {
  background-color: transparent !important;
  /* ラッパーの背景を見せるため透明に */
  border: none !important;
  /* サイズに関するスタイルは BlockDisplay 側に任せる */
  vertical-align: top;
  /* 念のため */
}

/* ホールドパネル内の空ブロック表示も同様に調整 */
.hold-panel .block-display.empty {
  background-color: transparent !important;
  border: none !important;
  /* 空の時の見た目を調整 (ラッパーがあるので不要かも) */
}

/* Nextキューパネル */
.next-queue-panel {
  background-color: rgba(0, 0, 0, 0.4);
  padding: 10px;
  border-radius: 5px;
  border: 1px solid var(--border-color);
  text-align: center;
}

.next-queue-panel h3 {
  margin: 0 0 8px 0;
  font-size: 14px;
  color: #61dafb;
  padding-bottom: 5px;
  border-bottom: 1px solid var(--border-color);
}

.next-blocks-queue {
  display: flex;
  flex-direction: column;
  /* 縦に並べる */
  align-items: center;
  /* 中央揃え */
  gap: 5px;
}

/* BlockDisplay (汎用ブロック表示) */
.block-display {
  display: inline-block;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 5px;
  border: 1px solid var(--border-color);
  line-height: 0;
  vertical-align: top;
}

.block-display.empty {
  background-color: rgba(0, 0, 0, 0.2);
}

.block-display .row {
  display: flex;
}

/* BlockDisplay 内の row は display:flex を明示 */
.block-display .cell {
  display: inline-block;
  vertical-align: top;
}

/* BlockDisplay 内の cell */

/* 情報パネル (Stats, Messages, Controls Info 用) */
.info-panel {
  background-color: rgba(0, 0, 0, 0.6);
  border: 2px solid var(--border-color);
  padding: 15px;
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.info-panel h3 {
  margin: 0 0 8px 0;
  font-size: 14px;
  color: #61dafb;
  border-bottom: 1px solid var(--border-color);
  padding-bottom: 5px;
}

.game-over-message,
.paused-message {
  background-color: rgba(180, 0, 0, 0.7);
  padding: 10px;
  border-radius: 5px;
  border: 1px solid #ff6b6b;
  text-align: center;
}

.paused-message {
  background-color: rgba(0, 100, 180, 0.7);
  border-color: #61dafb;
}

.game-over-message h2,
.paused-message h2 {
  color: #fff;
  margin: 0 0 5px 0;
  font-size: 1.1em;
}

.game-over-message p,
.paused-message p {
  margin: 0;
  font-size: 0.9em;
}

.stats {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
}

.stat-item {
  text-align: center;
  background-color: rgba(255, 255, 255, 0.05);
  padding: 8px;
  border-radius: 3px;
}

.stat-item h3 {
  margin: 0;
  font-size: 12px;
  color: #aaa;
  border-bottom: none;
  padding-bottom: 0;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.stat-item p {
  margin: 3px 0 0 0;
  font-size: 16px;
  font-weight: bold;
  color: var(--text-color);
}

.controls-info {
  background-color: rgba(0, 0, 0, 0.3);
  padding: 10px;
  border-radius: 3px;
}

.controls-info ul {
  margin: 0;
  padding: 0;
  list-style: none;
  font-size: 12px;
}

.controls-info li {
  margin-bottom: 5px;
  padding-left: 15px;
  position: relative;
}

.controls-info li::before {
  content: '>';
  position: absolute;
  left: 0;
  color: #61dafb;
}

/* コントロールボタン */
.controls {
  display: flex;
  gap: 10px;
  justify-content: center;
}

.control-button {
  padding: 8px 16px;
  background-color: #61dafb;
  color: #000;
  border: none;
  border-radius: 4px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.1s;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.control-button:hover {
  background-color: #4fa8d1;
}

.control-button:active {
  transform: translateY(1px);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.control-button:disabled {
  background-color: #555;
  color: #999;
  cursor: not-allowed;
  box-shadow: none;
  transform: none;
}

/* レスポンシブデザイン */
@media (max-width: 900px) {

  /* タブレット/スマホ向け */
  .game-layout {
    grid-template-columns: 1fr;
    /* 1列表示に変更 */
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
    justify-items: center;
    /* 各アイテムを中央揃え */
    gap: 15px;
  }

  .left-panel,
  /* Hold */
  .next-queue-panel,
  /* Next */
  .info-controls-area {
    /* Info + Controls */
    width: 90%;
    /* 幅を画面に合わせる */
    max-width: 350px;
  }

  /* 表示順序の例 (お好みで変更可) */
  .game-board-area {
    order: 1;
  }

  .left-panel {
    order: 2;
  }

  /* Hold */
  .next-queue-panel {
    order: 3;
  }

  /* Next */
  .info-controls-area {
    order: 4;
  }

  /* Info+Controls */
}